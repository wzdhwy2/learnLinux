# Test code for the vmware_host_ipv6 module.
# Copyright: (c) 2018, Christian Kotte <christian.kotte@gmx.de>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: store the vcenter container ip
  set_fact:
    vcsim: "{{ lookup('env', 'vcenter_host') }}"

- debug: var=vcsim

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall

- name: start vcsim
  uri:
    url: http://{{ vcsim }}:5000/spawn?cluster=2
  register: vcsim_instance

- debug:
    var: vcsim_instance

- name: Wait for vcsim server to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of clusters from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=CCR
  register: clusters

- name: get a cluster
  set_fact:
    ccr1: "{{ clusters.json[0] | basename }}"

- name: get a list of hosts from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=H
  register: hosts

- name: get a host
  set_fact:
    host1: "{{ hosts.json[0] | basename }}"

- debug: var=ccr1
- debug: var=host1

- name: Enable IPv6 support for a given host
  vmware_host_ipv6:
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance.json.username }}"
    password: "{{ vcsim_instance.json.password }}"
    esxi_hostname: "{{ host1 }}"
    validate_certs: no
    state: enabled
  register: host_ipv6_facts

- debug: var=host_ipv6_facts

- assert:
    that:
      - host_ipv6_facts is defined
      - host_ipv6_facts.changed

- name: Enable IPv6 support for a given host in check mode
  vmware_host_ipv6:
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance.json.username }}"
    password: "{{ vcsim_instance.json.password }}"
    esxi_hostname: "{{ host1 }}"
    validate_certs: no
    state: enabled
  register: host_ipv6_facts_check_mode
  check_mode: yes

- debug: var=host_ipv6_facts_check_mode

- assert:
    that:
      - host_ipv6_facts_check_mode is defined
      - host_ipv6_facts_check_mode.changed

- name: Enable IPv6 support for all hosts in given cluster
  vmware_host_ipv6:
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance.json.username }}"
    password: "{{ vcsim_instance.json.password }}"
    cluster_name: "{{ ccr1 }}"
    validate_certs: no
    state: enabled
  register: hosts_ipv6_facts

- debug: var=hosts_ipv6_facts

- assert:
    that:
      - hosts_ipv6_facts is defined
      - hosts_ipv6_facts.changed

- name: Enable IPv6 support for all hosts in given cluster in check mode
  vmware_host_ipv6:
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance.json.username }}"
    password: "{{ vcsim_instance.json.password }}"
    cluster_name: "{{ ccr1 }}"
    validate_certs: no
    state: enabled
  register: hosts_ipv6_facts_check_mode
  check_mode: yes

- debug: var=hosts_ipv6_facts_check_mode

- assert:
    that:
      - hosts_ipv6_facts_check_mode is defined
      - hosts_ipv6_facts_check_mode.changed
