---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: create a instance
  gcp_spanner_instance:
      name: "instance-database"
      display_name: My Spanner Instance
      node_count: 2
      labels:
        cost_center: ti-1700004
      config: regional-us-central1
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
  register: instance
- name: delete a database
  gcp_spanner_database:
      name: webstore
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: absent
#----------------------------------------------------------
- name: create a database
  gcp_spanner_database:
      name: webstore
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: verify that database was created
  shell: |
    gcloud spanner databases describe  --project="{{ gcp_project }}"  --instance="{{ instance.name }}"  "webstore"
  register: results
- name: verify that command succeeded
  assert:
    that:
      - results.rc == 0
# ----------------------------------------------------------------------------
- name: create a database that already exists
  gcp_spanner_database:
      name: webstore
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#----------------------------------------------------------
- name: delete a database
  gcp_spanner_database:
      name: webstore
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: absent
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: verify that database was deleted
  shell: |
    gcloud spanner databases describe  --project="{{ gcp_project }}"  --instance="{{ instance.name }}"  "webstore"
  register: results
  failed_when: results.rc == 0
- name: verify that command succeeded
  assert:
    that:
      - results.rc == 1
      - "\"Database not found: projects/{{ gcp_project }}/instances/instance-database/databases/webstore\" in results.stderr"
# ----------------------------------------------------------------------------
- name: delete a database that does not exist
  gcp_spanner_database:
      name: webstore
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: absent
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#---------------------------------------------------------
# Post-test teardown
- name: delete a instance
  gcp_spanner_instance:
      name: "instance-database"
      display_name: My Spanner Instance
      node_count: 2
      labels:
        cost_center: ti-1700004
      config: regional-us-central1
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: absent
  register: instance
