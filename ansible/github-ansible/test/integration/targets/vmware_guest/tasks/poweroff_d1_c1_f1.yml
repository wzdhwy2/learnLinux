# Test code for the vmware_guest module.
# Copyright: (c) 2017, James Tanner <tanner.jc@gmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: store the vcenter container ip
  set_fact:
    vcsim: "{{ lookup('env', 'vcenter_host') }}"
- debug: var=vcsim

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall
- name: start vcsim with folders
  uri:
    url: http://{{ vcsim }}:5000/spawn?datacenter=1&cluster=1&folder=1
  register: vcsim_instance

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of VMS from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=VM
  register: vmlist

- debug: var=vcsim_instance
- debug: var=vmlist

# https://github.com/ansible/ansible/issues/25011
# Sending "-folders 1" to vcsim nests the datacenter under
# the folder so that the path prefix is no longer /vm
#
# /F0/DC0/vm/F0/DC0_H0_VM0

- name: set state to poweredoff on all VMs
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    name: "{{ item|basename }}"
    datacenter: "{{ (item|basename).split('_')[0] }}"
    state: poweredoff
    folder: "{{ item|dirname }}"
  with_items: "{{ vmlist['json'] }}"
  register: poweroff_d1_c1_f1

- debug: var=poweroff_d1_c1_f1

# vcsim (v0.18.0) VMs are spawned PoweredOn
- name: make sure changes were made
  assert:
    that:
        - "poweroff_d1_c1_f1.results|map(attribute='changed')|unique|list == [True]"
