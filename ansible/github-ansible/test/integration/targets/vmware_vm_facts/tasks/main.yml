# Test code for the vmware_vm_facts module
# Copyright: (c) 2017, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: store the vcenter container ip
  set_fact:
    vcsim: "{{ lookup('env', 'vcenter_host') }}"
- debug: var=vcsim

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall
- name: start vcsim
  uri:
    url: http://{{ vcsim }}:5000/spawn?cluster=2
  register: vcsim_instance

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- debug: var=vcsim_instance

# Testcase 0001: Get detail of vms from given esxi
- name: get facts about available vms
  vmware_vm_facts:
    validate_certs: false
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
  register: vm_facts_0001

- debug:
    msg: "{{ vm_facts_0001['virtual_machines'].keys() }}"

- name: get all VMs
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=VM
  register: host_info_result

- name: verify if VM exists
  assert:
    that:
      - "{{ item | basename in vm_facts_0001['virtual_machines'].keys()}}"
      - "vm_facts_0001['virtual_machines'][item | basename]['cluster'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['esxi_hostname'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['guest_fullname'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['ip_address'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['mac_address'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['power_state'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['uuid'] is defined"
      - "vm_facts_0001['virtual_machines'][item | basename]['vm_network'] is defined"
  with_items:
    - "{{ host_info_result['json'] }}"
