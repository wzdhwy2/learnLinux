#/bin/bash/
#case语句是在多个范围内匹配数据，若匹配成功则执行相关命令并结束整个条件测试；
#而如果数据不在所列出的范围内，则会去执行星号（*）中所定义的默认命令。
	
read -p "请任意按键盘上的按键:" a
	
case "$a" in 
[a-z]|[A-Z]) 
	echo "你输入的是字母。"
	;;
[0-9]) 
	echo "你输入的是数字。"
	;;
*) 
	echo "$a"
	echo "你输入的是特殊字符、功能键或其他按键。"
esac


#case的语法要注意！
#[a-z][A-Z]中间可有一个管道符的“ | ”
#还有！case只能判断一个字符是什么类型！一次输入多了就判断为全不符合！！我还以为是接受不到数据导致的，结果并不是！！！
#什么时候用case？
#6-while.sh 有一个致命的弱点—只能接受数字！您可以尝试输入一个字母，会发现脚本立即就崩溃了。原因是字母无法与数字进行大小比较，
#例如，“a是否大于等于3”这样的命题是完全错误的。我们必须有一定的措施来判断用户的输入内容，当用户输入的内容不是数字时，
#脚本能予以提示，从而免于崩溃。通过在脚本中组合使用case条件测试语句和通配符（详见shell.txt），完全可以满足这里的需求



